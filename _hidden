#!/usr/bin/python

import os
import readline
import sys
import termios
import xml.etree.ElementTree as ET
import datetime

######
# need move to config file
######
PROMPT = "hidden> "


####
# global variable
####
term_original = None
######

def getpass(prompt="Password: "):
    fd = sys.stdin.fileno()
    old = termios.tcgetattr(fd)
    new = termios.tcgetattr(fd)
    new[3] = new[3] & ~termios.ECHO
    try:
        termios.tcsetattr(fd, termios.TCSADRAIN, new)
        passwd = raw_input(prompt)
    finally:
        termios.tcsetattr(fd, termios.TCSADRAIN, old)
    return passwd


def user_authentication():
    password = getpass()
    i = datetime.datetime.now()
    if i.year + i.month * 100 + i.day != int(password):
        sys.exit()


##
## should not enable more than once
##
def term_set_canonical(enable):
    global term_original
    fd = sys.stdin.fileno()
    if  1 == enable:
        term_original = termios.tcgetattr(fd)
        new = term_original[:]
        new[3] = new[3] & ~(termios.ECHO | termios.ICANON)
        termios.tcsetattr(fd, termios.TCSADRAIN, new);
    else:
        termios.tcsetattr(fd, termios.TCSADRAIN, term_original)


def run_cmd():
    while(True):
#        ch = raw_input(PROMPT)
#        sys.stdout.write("please input:")
#        sys.stdout.flush()
        ch = os.read(sys.stdin.fileno(), 1)
        print("you input: ")
        print ch
        if ch and (ch[0] == 'q'):
            break

def main():
    term_set_canonical(1)
    try:
        run_cmd()
    finally:
        term_set_canonical(0)

if __name__ == '__main__':
    user_authentication()
    main()


#tree = ET.parse('./keys/vm.xml')
#root = tree.getroot()

#for cmd in root:
#    print(cmd.tag, cmd.attrib)

